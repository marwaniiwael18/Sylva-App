name: CI/CD Pipeline

on:
  push:
    branches: [ main, aymen/donation ]
  pull_request:
    branches: [ main, aymen/donation ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test
          MYSQL_ALLOW_EMPTY_PASSWORD: no
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h localhost -u root -proot" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
    - uses: actions/checkout@v4
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: pdo, pdo_mysql
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Install PHP dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader
    - name: Install Node.js dependencies
      run: npm install
    - name: Build assets
      run: npm run build
    - name: Copy environment file
      run: cp .env.example .env || cp .env.ci .env || echo "No .env file found"
    - name: Generate application key
      run: php artisan key:generate
    - name: Run database migrations
      run: php artisan migrate --force
    - name: Run tests
      run: php artisan test --coverage-clover=coverage.xml

  sonar:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: pdo, pdo_mysql
    - name: Install PHP dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader --no-dev
    - name: Generate test results
      run: |
        mkdir -p test-results
        php artisan test --log-junit=test-results/junit.xml || true
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@v2
      env:
        SONAR_TOKEN: squ_551ab92e409aecb87e86e23f6c4921c71a408d33
        SONAR_HOST_URL: http://localhost:9000

  build:
    runs-on: ubuntu-latest
    needs: sonar
    steps:
    - uses: actions/checkout@v4
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ghcr.io/${{ github.repository }}:latest,ghcr.io/${{ github.repository }}:${{ github.sha }}

  monitoring-setup:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Build Prometheus Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./monitoring
        file: ./monitoring/Dockerfile.prometheus
        push: true
        tags: ghcr.io/${{ github.repository }}/prometheus:latest
    - name: Build Grafana Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./monitoring
        file: ./monitoring/Dockerfile.grafana
        push: true
        tags: ghcr.io/${{ github.repository }}/grafana:latest