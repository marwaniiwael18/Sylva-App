name: CI/CD Pipeline

on:
  push:
    branches: [ main, aymen/donation ]
  pull_request:
    branches: [ main, aymen/donation ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
    - uses: actions/checkout@v4
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: pdo, pdo_mysql
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Install PHP dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader
    - name: Install Node.js dependencies
      run: npm install
    - name: Build assets
      run: |
        npm run build
        ls -la public/build/
    - name: Copy environment file
      run: cp .env.ci .env
    - name: Generate application key
      run: php artisan key:generate
    - name: Wait for MySQL
      run: |
        for i in {1..30}; do
          if mysqladmin ping -h 127.0.0.1 -u root --silent; then
            echo "MySQL is ready"
            break
          fi
          echo "Waiting for MySQL... ($i/30)"
          sleep 2
        done
    - name: Run database migrations
      run: php artisan migrate --force
    - name: Run tests
      run: php artisan test --coverage-clover=coverage.xml

  sonar:
    runs-on: ubuntu-latest
    needs: test
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: pdo, pdo_mysql
    - name: Install PHP dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader
    - name: Copy environment file
      run: cp .env.ci .env
    - name: Generate application key
      run: php artisan key:generate
    - name: Wait for MySQL
      run: |
        for i in {1..30}; do
          if mysqladmin ping -h 127.0.0.1 -u root --silent; then
            echo "MySQL is ready"
            break
          fi
          echo "Waiting for MySQL... ($i/30)"
          sleep 2
        done
    - name: Run database migrations
      run: php artisan migrate --force
    - name: Generate test results
      run: |
        mkdir -p test-results
        php artisan test --log-junit=test-results/junit.xml || true
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@v2
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: https://sonarcloud.io

  build:
    runs-on: ubuntu-latest
    needs: sonar  # Changed from sonar to test to avoid blocking on sonar issues
    if: false  # Temporarily disabled due to registry permissions
    steps:
    - uses: actions/checkout@v4
    - name: Build Docker image (local only)
      run: docker build -t sylva-app:latest .